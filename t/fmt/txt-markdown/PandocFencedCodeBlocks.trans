~~~~~~~
IF (A > 3) {
  MOVESHIP(5 * GRAVITY, DOWN);
}
~~~~~~~

~~~~~~~~~~~~~~~~
~~~~~~~~~~
CODE INCLUDING TILDES
LINE2
~~~~~~~~~~
~~~~~~~~~~~~~~~~

~~~~ {#mycode .haskell .numberLines startFrom="100"}
QSORT []     = []
QSORT (X:XS) = QSORT (FILTER (< X) XS) ++ [X] ++
               QSORT (FILTER (>= X) XS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~haskell
QSORT []     = []
QSORT (X:XS) = QSORT (FILTER (< X) XS) ++ [X] ++
               QSORT (FILTER (>= X) XS)
~~~

```````
IF (A > 3) {
  MOVESHIP(5 * GRAVITY, DOWN);
}
```````

````````````````
``````````
CODE INCLUDING BACKTICKS
LINE2
``````````
````````````````

```` {#mycode .haskell .numberLines startFrom="100"}
QSORT []     = []
QSORT (X:XS) = QSORT (FILTER (< X) XS) ++ [X] ++
               QSORT (FILTER (>= X) XS)
`````````````````````````````````````````````````

```haskell
QSORT []     = []
QSORT (X:XS) = QSORT (FILTER (< X) XS) ++ [X] ++
               QSORT (FILTER (>= X) XS)
```
